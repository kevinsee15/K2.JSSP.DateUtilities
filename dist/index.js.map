{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import '@k2oss/k2-broker-core';\n\nmetadata = {\n    systemName: \"com.k2.example\",\n    displayName: \"Example Broker\",\n    description: \"An example broker that accesses JSONPlaceholder.\"\n};\n\nondescribe = async function ({ configuration }): Promise<void> {\n    postSchema({\n        objects: {\n            \"gapsInDateRanges\": {\n                displayName: \"Gaps in Date Ranges\",\n                description: \"Finds gaps in a list of date ranges.\",\n                properties: {\n                    \"input\": {\n                        displayName: \"input\",\n                        type: \"string\"\n                    },\n                    \"outputInDays\": {\n                        displayName: \"Output in Days\",\n                        type: \"number\"\n                    },\n                    \"outputFormatted\": {\n                        displayName: \"Output Formatted\",\n                        type: \"string\"\n                    }\n                },\n                methods: {\n                    \"inDays\": {\n                        displayName: \"In Days\",\n                        type: \"read\",\n                        inputs: [\"input\"],\n                        requiredParameters: [\"input\"],\n                        outputs: [\"outputInDays\", \"outputFormatted\"]\n                    }\n                }\n            }\n        }\n    });\n}\n\nonexecute = async function ({ objectName, methodName, parameters, properties, configuration, schema }): Promise<void> {\n    switch (objectName) {\n        case \"gapsInDateRanges\": await onexecuteTodo(methodName, properties, parameters); break;\n        default: throw new Error(\"The object \" + objectName + \" is not supported.\");\n    }\n}\n\nasync function onexecuteTodo(methodName: string, properties: SingleRecord, parameters: SingleRecord): Promise<void> {\n    switch (methodName) {\n        case \"inDays\": await findGapsInDays(properties); break;\n        default: throw new Error(\"The method \" + methodName + \" is not supported.\");\n    }\n}\n\nclass DateRange {\n    DateA: Date;\n    DateB: Date;\n\n    constructor(dateA: Date, dateB: Date) {\n        this.DateA = dateA;\n        this.DateB = dateB;\n    }\n}\n\nfunction splitInputAndArrangeAsc(input: string): DateRange[] {\n    let dateRangeList: DateRange[] = [];\n\n    let strDateRanges: string[] = input.split(\",\");\n\n    for (let strDateRange of strDateRanges) {\n        let strDateA: string = strDateRange.split(';')[0];\n        let strDateB: string = strDateRange.split(';')[1];\n\n        dateRangeList.push(new DateRange(new Date(new Date(strDateA).toDateString()), new Date(new Date(strDateB).toDateString())));\n    }\n\n    return dateRangeList.sort((a, b) => a.DateA < b.DateA ? -1 : a.DateA > b.DateA ? 1 : 0);;\n}\n\nfunction findGapsInDateRanges(input: DateRange[]): DateRange[] {\n    var gaps: DateRange[] = [];\n\n    for (var i = 1; i < input.length; i++) {\n        var beginningOfHole = input[i - 1].DateB.getTime() / 1000;\n        var endOfHole = input[i].DateA.getTime() / 1000;\n        if (beginningOfHole < endOfHole) {\n            gaps.push(new DateRange(new Date((beginningOfHole + 1) * 1000), new Date((endOfHole - 1) * 1000)));\n        }\n    }\n\n    return gaps;\n}\n\nfunction dayDifference(input: DateRange[]): number {\n    let totalDays = 0;\n\n    for (let gap of input) {\n        let diffTime = Math.abs(gap.DateB.getTime() - gap.DateA.getTime());\n        let diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        totalDays += diffDays - 1;\n    }\n\n    return totalDays;\n}\n\nfunction findGapsInDays(properties: SingleRecord) {\n    let input: string = properties[\"input\"].toString();\n\n    let sanitizedList = splitInputAndArrangeAsc(input);\n    let gapsInDateRanges = findGapsInDateRanges(sanitizedList);\n    let gapsInDays = dayDifference(gapsInDateRanges);\n\n    let outputFormatted = \"No gaps were found.\";\n    \n    if (gapsInDays == 1) {\n        outputFormatted = gapsInDays + \" Day\";\n    } else if (gapsInDays > 1) {\n        outputFormatted = gapsInDays + \" Days\";\n    }\n\n    postResult({\n        \"outputInDays\": gapsInDays,\n        \"outputFormatted\": outputFormatted\n    });\n}"],"names":["metadata","systemName","displayName","description","ondescribe","async","configuration","postSchema","objects","properties","type","methods","inputs","requiredParameters","outputs","onexecute","objectName","methodName","parameters","schema","gapsInDays","input","totalDays","gap","diffTime","Math","abs","DateB","getTime","DateA","diffDays","ceil","dayDifference","gaps","i","length","beginningOfHole","endOfHole","push","DateRange","Date","findGapsInDateRanges","dateRangeList","strDateRanges","split","strDateRange","strDateA","strDateB","toDateString","sort","a","b","splitInputAndArrangeAsc","toString","outputFormatted","postResult","findGapsInDays","Error","onexecuteTodo","constructor","dateA","dateB"],"mappings":"YAEAA,SAAW,CACPC,WAAY,iBACZC,YAAa,iBACbC,YAAa,oDAGjBC,WAAaC,gBAAgBC,cAAEA,IAC3BC,WAAW,CACPC,QAAS,kBACe,CAChBN,YAAa,sBACbC,YAAa,uCACbM,WAAY,OACC,CACLP,YAAa,QACbQ,KAAM,uBAEM,CACZR,YAAa,iBACbQ,KAAM,0BAES,CACfR,YAAa,mBACbQ,KAAM,WAGdC,QAAS,QACK,CACNT,YAAa,UACbQ,KAAM,OACNE,OAAQ,CAAC,SACTC,mBAAoB,CAAC,SACrBC,QAAS,CAAC,eAAgB,0BAQlDC,UAAYV,gBAAgBW,WAAEA,EAAFC,WAAcA,EAAdC,WAA0BA,EAA1BT,WAAsCA,EAAtCH,cAAkDA,EAAlDa,OAAiEA,WACjFH,OACC,yBAKbX,eAA6BY,EAAoBR,EAA0BS,UAC/DD,OACC,eAwDb,SAAwBR,OAKhBW,EAjBR,SAAuBC,OACfC,EAAY,MAEX,IAAIC,KAAOF,EAAO,KACfG,EAAWC,KAAKC,IAAIH,EAAII,MAAMC,UAAYL,EAAIM,MAAMD,WACpDE,EAAWL,KAAKM,KAAKP,SACzBF,GAAaQ,EAAW,SAGrBR,EAQUU,CA/BrB,SAA8BX,WACtBY,EAAoB,GAEfC,EAAI,EAAGA,EAAIb,EAAMc,OAAQD,IAAK,KAC/BE,EAAkBf,EAAMa,EAAI,GAAGP,MAAMC,UAAY,IACjDS,EAAYhB,EAAMa,GAAGL,MAAMD,UAAY,IACvCQ,EAAkBC,GAClBJ,EAAKK,KAAK,IAAIC,EAAU,IAAIC,KAA6B,KAAvBJ,EAAkB,IAAY,IAAII,KAAuB,KAAjBH,EAAY,aAIvFJ,EAmBgBQ,CA7C3B,SAAiCpB,OACzBqB,EAA6B,GAE7BC,EAA0BtB,EAAMuB,MAAM,SAErC,IAAIC,KAAgBF,EAAe,KAChCG,EAAmBD,EAAaD,MAAM,KAAK,GAC3CG,EAAmBF,EAAaD,MAAM,KAAK,GAE/CF,EAAcJ,KAAK,IAAIC,EAAU,IAAIC,KAAK,IAAIA,KAAKM,GAAUE,gBAAiB,IAAIR,KAAK,IAAIA,KAAKO,GAAUC,yBAGvGN,EAAcO,KAAK,CAACC,EAAGC,IAAMD,EAAErB,MAAQsB,EAAEtB,OAAS,EAAIqB,EAAErB,MAAQsB,EAAEtB,MAAQ,EAAI,GAgCjEuB,CAFA3C,EAAU,MAAU4C,cAMpCC,EAAkB,sBAEJ,GAAdlC,EACAkC,EAAkBlC,EAAa,OACxBA,EAAa,IACpBkC,EAAkBlC,EAAa,SAGnCmC,WAAW,cACSnC,kBACGkC,IAzEEE,CAAe/C,uBACrB,IAAIgD,MAAM,cAAgBxC,EAAa,uBARvByC,CAAczC,EAAYR,uBAC1C,IAAIgD,MAAM,cAAgBzC,EAAa,wBAW9D,MAAMuB,EAIFoB,YAAYC,EAAaC,QAChBhC,MAAQ+B,OACRjC,MAAQkC"}